package seng302.group5.controller.dialogControllers;

import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.TextArea;
import javafx.scene.image.Image;
import javafx.scene.layout.HBox;
import javafx.stage.Stage;
import seng302.group5.controller.enums.CreateOrEdit;

/**
 * Created by @author Alex Woo
 */
public class ACDialogController {

  @FXML private Button btnConfirm;
  @FXML private Button btnCancel;
  @FXML private TextArea textAC;
  @FXML private HBox btnContainer;

  private StoryDialogController storyDC;
  private Stage thisStage;
  private CreateOrEdit createOrEdit;
  private String ac;

  /**
   * Setup the Acceptance Criteria dialog controller.
   *
   * @param storyDC The story dialog so that a AC can be added to it
   * @param thisStage The stage of the dialog.
   * @param createOrEdit Whether the dialog is for creating or editing a story.
   * @param ac The acceptance criteria to edit. Null if creation.
   */
  public void setupController(StoryDialogController storyDC, Stage thisStage, CreateOrEdit createOrEdit, String ac) {
    this.storyDC = storyDC;
    this.thisStage = thisStage;
    this.createOrEdit = createOrEdit;
    this.ac = ac;

    String os = System.getProperty("os.name");

    if (!os.startsWith("Windows")) {
      btnContainer.getChildren().remove(btnConfirm);
      btnContainer.getChildren().add(btnConfirm);
    }

    if (createOrEdit == CreateOrEdit.CREATE) {
      thisStage.setTitle("Create New Acceptance Criterion");
      btnConfirm.setText("Create");
    } else if (createOrEdit == CreateOrEdit.EDIT) {
      thisStage.setTitle("Edit Acceptance Criterion");
      btnConfirm.setText("Save");

      textAC.setText(ac);
      textAC.positionCaret(ac.length());
      btnConfirm.setDisable(true);
    }
    this.createOrEdit = createOrEdit;
    btnConfirm.setDefaultButton(true);
    thisStage.setResizable(false);

    textAC.textProperty().addListener((observable, oldValue, newValue) -> {
      //For disabling the button
      if (createOrEdit == CreateOrEdit.EDIT) {
        checkButtonDisabled();
      }
    });
    thisStage.getIcons().add(new Image("Thumbnail.png"));
  }

  /**
   * Checks if a change has been made to the text field and disables the
   * confirm button accordingly.
   */
  private void checkButtonDisabled() {
    if (textAC.getText().equals(ac)) {
      btnConfirm.setDisable(true);
    } else {
      btnConfirm.setDisable(false);
    }
  }

  /**
   * Adds the AC to the story.
   *
   * @param event Event generated by event listener.
   */
  @FXML
  protected void btnAddClick(ActionEvent event) {
    StringBuilder errors = new StringBuilder();
    int noErrors = 0;

    String newAC = textAC.getText().trim();

    try {
      newAC = checkValidInput(newAC);
    } catch (Exception e) {
      noErrors++;
      errors.append(String.format("%s\n", e.getMessage()));
    }

    try {
      storyDC.checkForDuplicateAC(newAC);
    } catch (Exception e) {
      noErrors++;
      errors.append(String.format("%s\n", e.getMessage()));
    }

    //Display any errors.
    if (noErrors > 0) {
      String title = String.format("%d invalid field", noErrors);
      if (noErrors > 1) {
        title += "s";  // plural
      }
      Alert alert = new Alert(Alert.AlertType.ERROR);
      alert.setTitle(title);
      alert.setHeaderText(null);
      alert.setContentText(errors.toString());
      alert.showAndWait();
    } else {
      if (this.createOrEdit == createOrEdit.CREATE) {
        this.storyDC.appendAcceptanceCriteria(newAC);
      } else if (createOrEdit == CreateOrEdit.EDIT) {
        this.storyDC.changeAcceptanceCriteria(ac, newAC);
      }
      thisStage.close();
    }
    textAC.requestFocus();
  }

  /**
   * Closes the AC dialog box on click of 'Cancel' button.
   *
   * @param event Event generated by event listener.
   */
  @FXML
  protected void btnCancelClick(ActionEvent event) {
    thisStage.close();
  }

  /**
   * Checks if the acceptance criteria is valid.
   *
   * @param string The acceptance criteria to check in String form.
   * @return The acceptance criteria if it is valid.
   * @throws Exception Any problems with the acceptance criteria.
   */
  private String checkValidInput(String string) throws Exception {
    if (string.isEmpty()) {
      throw new Exception("Acceptance criterion is empty.");
    } else {
      return string;
    }
  }
}
